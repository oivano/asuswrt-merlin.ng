#!/bin/sh
#
# Copyright (C) 2020 Daniel Lenski
#
# This file is part of openconnect.
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

# This test uses LD_PRELOAD
PRELOAD=1
SERV="${SERV:-../src/ocserv}"
srcdir=${srcdir:-.}
top_builddir=${top_builddir:-..}

. `dirname $0`/common.sh

########################################
# Verify that we cannot connect to a server offering only obsolete, insecure
# crypto UNLESS --allow-insecure-crypto is specified:
#   - only offer TLS v1.0, not newer versions
#   - only offer 3DES and RC4 ciphers
#   - only offer MD5 and SHA1 hashes
#   - only offer unsafe/legacy renegotiation, NOT the safe renegotiation extension
#     (may not do anything: Cisco AnyConnect servers use renegotiation; ocserv may not)
########################################

echo "Testing against server with insecure crypto (3DES and RC4 only)..."

# Run servers
PORT=4568
TLS_PRIORITIES="LEGACY:%SERVER_PRECEDENCE:%COMPAT:%DISABLE_SAFE_RENEGOTIATION:%UNSAFE_RENEGOTIATION:-VERS-TLS-ALL:+VERS-TLS1.0:-CIPHER-ALL:+3DES-CBC:+ARCFOUR-128:+MD5:+SHA1"
update_config test-obsolete-server-crypto.config

########################################
# Need to override mandatory system-wide crypto policy on Fedora 31+, in
# order for ocserv to offer 3DES and RC4.
#
# However, we want to leave this policy in place for openconnect,
# in order to verify the client's ability to disable it on its own.
########################################
GNUTLS_SYSTEM_PRIORITY_FILE=/dev/null launch_simple_sr_server -d 1 -f -c $CONFIG

PID=$!
wait_server $PID

echo -n "Connecting without --allow-insecure-crypto... "
( echo "test" | LD_PRELOAD=libsocket_wrapper.so $OPENCONNECT -q $ADDRESS:$PORT -u test --servercert=pin-sha256:xp3scfzy3rO --cookieonly >/dev/null 2>&1) &&
	fail $PID "Connected successfully when we shouldn't"

echo ok

echo -n "Connecting with --allow-insecure-crypto... "
( echo "test" | LD_PRELOAD=libsocket_wrapper.so $OPENCONNECT -q $ADDRESS:$PORT -u test --servercert=pin-sha256:xp3scfzy3rO --allow-insecure-crypto --cookieonly >/dev/null 2>&1) ||
	fail $PID "Could not connect and obtain cookie with --allow-insecure-crypto"

echo ok

cleanup

exit 0
